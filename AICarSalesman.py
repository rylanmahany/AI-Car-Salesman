# -*- coding: utf-8 -*-
"""AICarSalesman.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e97ylZNYXspG_DDXvZ1yBDY02C15WbPQ
"""

#Imports, opening up data
import numpy as np
import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.compose import ColumnTransformer
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import seaborn as sns
import math

OHE = OneHotEncoder(handle_unknown = 'ignore')
data = pd.read_csv('/content/CarPrice_Assignment.csv')
data = data.drop(columns=['car_ID', 'symboling', 'CarName', 'doornumber', 'carbody', 'drivewheel', 'enginelocation', 'wheelbase',
                          'carlength', 'carwidth', 'carheight', 'curbweight', 'enginetype', 'enginesize', 'fuelsystem', 'boreratio',
                          'stroke', 'compressionratio', 'peakrpm'])

#Encoding qualitative data to quantitative categories
y = data['price']
x = data.drop(columns=['price'])
transform = ColumnTransformer([('OneHot', OneHotEncoder(drop='first'), ['fueltype', 'aspiration', 'cylindernumber'])], remainder='passthrough')
transform.fit(x)
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=.25, random_state=23)
X_train_hot = pd.DataFrame(transform.transform(X_train), columns= transform.get_feature_names_out())
X_test_hot = pd.DataFrame(transform.transform(X_test), columns= transform.get_feature_names_out())
X_train_hot.head()

#Creating correlation map of features
correlation = pd.concat([X_train_hot, y_train], axis=1).corr()
figure, axis = plt.subplots(figsize=(12,12))
sns.heatmap(correlation, cmap="RdBu", annot=True)

#Fitting model and making predictions
LG = LinearRegression().fit(X_train_hot, y_train)
y_predictions = LG.predict(X_test_hot)

y_test = y_test.values

for i in range(len(y_predictions)):
  diff = abs(y_predictions[i] - y_test[i])
MAE = diff / len(y_test)
print('MAE = ', MAE)

"""# New Section"""